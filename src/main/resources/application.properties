quarkus.application.name=all-you-can-eat-bot
quarkus.http.port=${PORT:5000}

quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=${POSTGRESQL_USERNAME:postgres}
quarkus.datasource.password=${POSTGRESQL_PASSWORD:docker}
quarkus.datasource.jdbc.driver=org.postgresql.Driver
quarkus.datasource.jdbc.url=jdbc:postgresql://${POSTGRESQL_HOST:localhost}:${POSTGRESQL_PORT:5432}/${DB_NAME:order}

quarkus.liquibase.migrate-at-start=true
quarkus.liquibase.clean-at-start=false
quarkus.liquibase.change-log=classpath:db/changeLog.yml
quarkus.liquibase.default-schema-name=public

quarkus.hibernate-orm.database.default-schema=public

# rest clients
telegram-rest-client/mp-rest/url=https://api.telegram.org
all-you-can-eat-bot-rest-client/mp-rest/url=http://localhost:${PORT:5000}

# bot configs
bot.type=webhook
bot.username=${BOT_USERNAME:AllYouCanEatBot}
bot.token=${BOT_TOKEN:todo}
# necessary for webhook implementation,
# telegram will send updates at https://www.example.com/bot/callback
bot.host=${BOT_HOST:https://www.example.com}
bot.reopen.order.timeout=${BOT_REOPEN_ORDER_TIMEOUT:15}
bot.repo.url=${BOT_REPO_URL:todo}
bot.donate.url=${BOT_DONATE_URL:todo}

# scheduled jobs
quarkus.scheduler.enabled=${CRON_ENABLED:false}

bot.cleanup.job.cron.expr=${CLEANUP_JOB_CRON_EXPR:0 */10 * * * ?}
bot.order.deletion.timeout=${ORDER_DELETION_TIMEOUT:12}

bot.keep.alive.job.cron.expr=${KEEP_ALIVE_JOB_CRON_EXPR:0 */15 * * * ?}

bot.cleanup.command.cache.job.cron.expr=${CLEANUP_COMMAND_CACHE_JOB_CRON_EXPR:0 */5 * * * ?}
bot.command.cache.deletion.timeout=${COMMAND_CACHE_DELETION_TIMEOUT:5}
